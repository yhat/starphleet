#!/usr/bin/env bash
### Usage:
###    starphleet-git <args>...
### --help
###
### Wrapper script to run git, with identity config files generated
### from private keys
#no docopt on purpose, to hard to eat and pass along arbitrary switches
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${DIR}/tools"

#admiral config file generation

#completely regenerate each time there is a change. headquarters won't take
#any lip from its admirals!
export SSH_CONFIG="/tmp/ssh.config.$$"
echo "StrictHostKeyChecking no" > "${SSH_CONFIG}"
echo "CheckHostIP no" >> "${SSH_CONFIG}"
echo "UserKnownHostsFile "${SSH_CONFIG}.known_hosts"" >> "${SSH_CONFIG}"
chown ${ADMIRAL}:${ADMIRAL} "${SSH_CONFIG}"
for key in $(find "/var/starphleet/private_keys/")
do
  if [ -f "${key}" ]; then
    if grep "PRIVATE KEY" "${key}" > /dev/null; then
      info using ${key}
      chown ${ADMIRAL}:${ADMIRAL} ${key}
      chmod 600 ${key}
      echo "IdentityFile ${key}" >> "${SSH_CONFIG}"
    fi
  fi
done

# script that patches SSH to use our admiral config
export GIT_SSH="/tmp/.git_ssh.$$"
echo "ssh -F ${SSH_CONFIG} \$@" > ${GIT_SSH}
chmod +x ${GIT_SSH}
trap 'rm "${GIT_SSH}";rm "${SSH_CONFIG}"; test -f "${SSH_CONFIG}.known_hosts" && rm "${SSH_CONFIG}.known_hosts"' EXIT
# Run the git command
git "$@"
