#!/usr/bin/env bash
### Usage:
###    starphleet-publish <container_name> <container_port> <public_url>
### --help
###
### Publish HTTP traffic from the container port:/ out to the ship
### nginx at a designated url mount point. This lets you aggregate multiple
### web services under one host and avoid CORS and cross domain muck.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
help=$(grep "^### " "$0" | cut -c 5-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"

set -e

PORT="${container_port:-${PORT}}"
URL="${public_url:-/}"
[ "${URL}" == "/" ] && URL=""
CONTAINER_NAME=${container_name}
IP_ADDRESS=$(lxc-ls --fancy | grep "^${CONTAINER_NAME}" | awk '{ print $3; }')
HOSTNAME=$(hostname)
PUBLISH_CONF="${NGINX_CONF}/published/$(urlencode \"${public_url}\").conf"

test ! -d "${NGINX_CONF}/published" && mkdir -p "${NGINX_CONF}/published"

cat << EOF > "${PUBLISH_CONF}"
location ${URL}/ {
  include /var/starphleet/nginx/cors.conf;
  # Path rewriting to hide mount prefix
  rewrite ${URL}/(.*) /\$1 break;
  proxy_pass http://${IP_ADDRESS}:${PORT};
  add_header X-CONTAINER ${CONTAINER_NAME};
  add_header X-SHIP ${HOSTNAME};
  # WebSocket support (nginx 1.4)
  proxy_http_version 1.1;
  proxy_set_header Upgrade \$http_upgrade;
  proxy_set_header Connection "upgrade";
}
EOF

initctl list | grep 'starphleet_nginx' > /dev/null && reload starphleet_nginx

info published to http://${HOSTNAME}${URL}
